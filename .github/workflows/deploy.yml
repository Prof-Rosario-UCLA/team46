name: CI/CD to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  deploy:
    name: Deploy to Cloud Run
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Build & push Docker image
        run: |
          IMAGE="gcr.io/${{ secrets.GCP_PROJECT }}/pantrypal:${GITHUB_SHA::8}"
          gcloud builds submit --tag $IMAGE .

      - name: Deploy to Cloud Run
        run: |
          IMAGE="gcr.io/${{ secrets.GCP_PROJECT }}/pantrypal:${GITHUB_SHA::8}"
          gcloud run deploy pantrypal \
            --image $IMAGE \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --set-cloudsql-instances ${{ secrets.GCP_SQL_INSTANCE }} \
            --set-env-vars \
              DATABASE_URL="postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASS }}@/${{ secrets.DB_NAME }}?host=/cloudsql/${{ secrets.GCP_SQL_INSTANCE }}"

      - name: Show service URL
        run: |
          gcloud run services describe pantrypal \
            --region us-central1 \
            --format="value(status.url)"
