name: CI/CD to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION:     ${{ secrets.GCP_REGION }}
  REPO:       ${{ secrets.GCP_AR_REPO }}
  SERVICE:    ${{ secrets.GCP_RUN_SERVICE }}
  IMAGE_TAG:  ${{ github.sha }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - uses: google-github-actions/setup-gcloud@v1

      - name: Docker login
        run: |
          REGISTRY="${{ env.REGION }}-docker.pkg.dev"
          echo '${{ secrets.GCP_SA_KEY }}' | docker login -u _json_key --password-stdin "https://$REGISTRY"

      - name: Docker build & push
        run: |
          set -e
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ env.IMAGE_TAG }}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image="$IMAGE" \
            --region="${{ env.REGION }}" \
            --platform=managed \
            --allow-unauthenticated \
            --add-cloudsql-instances="${{ env.PROJECT_ID }}:${{ env.REGION }}:pantrypal-db" \
            --set-env-vars=DATABASE_URL='${{ secrets.DATABASE_URL }}' \
            --quiet
